plugins { id 'org.beryx.runtime' version '1.12.2' }
apply plugin: 'application'

sourceSets.main.resources.srcDirs += [ rootProject.file('assets').path ]
mainClassName = 'hu.mudlee.desktop.Lwjgl3Launcher'
eclipse.project.name = appName + '-desktop'
sourceCompatibility = JavaVersion.VERSION_15

dependencies {
	implementation project(':core')
	implementation "com.badlogicgames.gdx:gdx-backend-lwjgl3:$gdxVersion"
	implementation "com.badlogicgames.gdx:gdx-platform:$gdxVersion:natives-desktop"
	implementation "com.badlogicgames.gdx:gdx-freetype-platform:$gdxVersion:natives-desktop"
}

import org.gradle.internal.os.OperatingSystem

run {
	workingDir = rootProject.file('assets').path
	setIgnoreExitValue(true)
	
	if (OperatingSystem.current() == OperatingSystem.MAC_OS) {
		// Required to run LWJGL3 Java apps on MacOS
		jvmArgs += "-XstartOnFirstThread"
	}
}

task dist(type: Jar) {
	dependsOn configurations.runtimeClasspath
	from { configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) } } 
	manifest {
		attributes 'Main-Class': project.mainClassName
	}
	with jar
	destinationDirectory = file("$buildDir/lib")
}

dist.dependsOn classes
jpackageImage.dependsOn dist

runtime {
	def osName = System.getProperty('os.name').toLowerCase(Locale.ROOT)

	addOptions(
		'--strip-debug',
		'--compress', '2',
		'--no-header-files',
		'--no-man-pages',
		'--strip-native-commands'
	)

	addModules(
		'java.base' ,
		'java.desktop',
		'jdk.unsupported'
	)

	distDir.set(file(buildDir))

	launcher {
		if(osName.contains('mac')) {
			jvmArgs.add("-XstartOnFirstThread")
		}
	}

	jpackage {
		mainJar = dist.archiveFileName.get()
		imageName = "launcher"
		appVersion = "1.0.1"

		if (osName.contains('windows')) {
			targetPlatform("win") {
				jdkHome = jdkDownload("https://github.com/AdoptOpenJDK/openjdk15-binaries/releases/download/jdk15u-2021-01-22-02-31/OpenJDK15U-jdk_x64_windows_hotspot_2021-01-22-02-31.zip")
			}
			targetPlatformName = "win"
			//imageOptions = ["--icon", file("../icons/icon.ico")]
		} else if (osName.contains('linux')) {
			targetPlatform("linux-x64") {
				jdkHome = jdkDownload("https://github.com/AdoptOpenJDK/openjdk15-binaries/releases/download/jdk15u-2021-01-22-02-31/OpenJDK15U-jdk_x64_linux_hotspot_2021-01-22-02-31.tar.gz")
			}
			targetPlatformName = "linux-x64"
			//imageOptions = ["--icon", file("../icons/icon.png")]
		} else if (osName.contains('mac')) {
			targetPlatform("mac") {
				jdkHome = jdkDownload("https://github.com/AdoptOpenJDK/openjdk15-binaries/releases/download/jdk15u-2021-01-22-02-31/OpenJDK15U-jdk_x64_mac_hotspot_2021-01-22-02-31.tar.gz")
			}
			targetPlatformName = "mac"
			//imageOptions = ["--icon", file("../icons/icon.icns")]
		}
	}
}